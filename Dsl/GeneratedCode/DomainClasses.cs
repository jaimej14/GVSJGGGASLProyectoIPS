//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Tapiz
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("983aef27-b0e6-4854-88eb-b260a873fd19")]
	public partial class Tapiz : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Tapiz domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x983aef27, 0xb0e6, 0x4854, 0x88, 0xeb, 0xb2, 0x60, 0xa8, 0x73, 0xfd, 0x19);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Ventana opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.TapizDomainRoleId);
			}
		}
		#endregion
		#region EstadoDeFin opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoDeFin.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoDeFin> EstadoDeFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoDeFin>, EstadoDeFin>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.TapizDomainRoleId);
			}
		}
		#endregion
		#region Boton opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Boton.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.TapizDomainRoleId);
			}
		}
		#endregion
		#region Menu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.TapizDomainRoleId);
			}
		}
		#endregion
		#region ItemsMenu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemsMenu> ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.TapizDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana sourceVentana1 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana;
			if (sourceVentana1 != null)
			{
				// Create link for path TapizHasVentana.Ventana
				this.Ventana.Add(sourceVentana1);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin sourceEstadoDeFin2 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin;
			if (sourceEstadoDeFin2 != null)
			{
				// Create link for path TapizHasEstadoDeFin.EstadoDeFin
				this.EstadoDeFin.Add(sourceEstadoDeFin2);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton sourceBoton3 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton;
			if (sourceBoton3 != null)
			{
				// Create link for path TapizHasBoton.Boton
				this.Boton.Add(sourceBoton3);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu sourceMenu4 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu;
			if (sourceMenu4 != null)
			{
				// Create link for path TapizHasMenu.Menu
				this.Menu.Add(sourceMenu4);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu sourceItemsMenu5 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu;
			if (sourceItemsMenu5 != null)
			{
				// Create link for path TapizHasItemsMenu.ItemsMenu
				this.ItemsMenu.Add(sourceItemsMenu5);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana sourceVentana1 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana;
			if (sourceVentana1 != null)
			{
				// Delete link for path TapizHasVentana.Ventana
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceVentana1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.VentanaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin sourceEstadoDeFin2 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin;
			if (sourceEstadoDeFin2 != null)
			{
				// Delete link for path TapizHasEstadoDeFin.EstadoDeFin
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceEstadoDeFin2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.EstadoDeFinDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton sourceBoton3 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton;
			if (sourceBoton3 != null)
			{
				// Delete link for path TapizHasBoton.Boton
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceBoton3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.BotonDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu sourceMenu4 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu;
			if (sourceMenu4 != null)
			{
				// Delete link for path TapizHasMenu.Menu
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceMenu4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.MenuDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu sourceItemsMenu5 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu;
			if (sourceItemsMenu5 != null)
			{
				// Delete link for path TapizHasItemsMenu.ItemsMenu
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceItemsMenu5))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.ItemsMenuDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Ventana
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("206b3383-6a7d-40b8-b328-0aa6c651af35")]
	public abstract partial class Ventana : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Ventana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x206b3383, 0x6a7d, 0x40b8, 0xb3, 0x28, 0x0a, 0xa6, 0xc6, 0x51, 0xaf, 0x35);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Ventana(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x93823b4d, 0xf94c, 0x42a1, 0x91, 0x0d, 0x33, 0xa2, 0x31, 0x37, 0xc9, 0xbc);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/nombre.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/nombre.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("93823b4d-f94c-42a1-910d-33a23137c9bc")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ancho domain property code
		
		/// <summary>
		/// ancho domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoDomainPropertyId = new global::System.Guid(0x8424b9c0, 0xde5b, 0x40fc, 0x82, 0x0f, 0x51, 0xcc, 0xef, 0x34, 0xe9, 0xff);
		
		/// <summary>
		/// Storage for ancho
		/// </summary>
		private global::System.Int64 anchoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ancho domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Ancho
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/ancho.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/ancho.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8424b9c0-de5b-40fc-820f-51ccef34e9ff")]
		public global::System.Int64 ancho
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				anchoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.ancho domain property.
		/// </summary>
		internal sealed partial class anchoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int64>
		{
			private anchoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.ancho domain property value handler.
			/// </summary>
			public static readonly anchoPropertyHandler Instance = new anchoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.ancho domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int64 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.anchoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int64 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int64 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.anchoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region alto domain property code
		
		/// <summary>
		/// alto domain property Id.
		/// </summary>
		public static readonly global::System.Guid altoDomainPropertyId = new global::System.Guid(0x5b9fa845, 0xb9bf, 0x4a2a, 0xb5, 0x11, 0x5b, 0x99, 0xe2, 0xbc, 0xaf, 0xa7);
		
		/// <summary>
		/// Storage for alto
		/// </summary>
		private global::System.Int64 altoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of alto domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Alto
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/alto.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/alto.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5b9fa845-b9bf-4a2a-b511-5b99e2bcafa7")]
		public global::System.Int64 alto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return altoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				altoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.alto domain property.
		/// </summary>
		internal sealed partial class altoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int64>
		{
			private altoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.alto domain property value handler.
			/// </summary>
			public static readonly altoPropertyHandler Instance = new altoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.alto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return altoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int64 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.altoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int64 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int64 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.altoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.Ventana
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.VentanaDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.VentanaDomainRoleId, value);
			}
		}
		#endregion
		#region ItemsMenu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemsMenu> ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Boton1 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Boton1.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Boton1
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Boton opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Boton.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Menu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.VentanaDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaSecundaria
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9eb6e41f-3cfb-4516-bf5a-f746b10e6462")]
	public partial class VentanaSecundaria : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9eb6e41f, 0x3cfb, 0x4516, 0xbf, 0x5a, 0xf7, 0x46, 0xb1, 0x0e, 0x64, 0x62);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region padrePid domain property code
		
		/// <summary>
		/// padrePid domain property Id.
		/// </summary>
		public static readonly global::System.Guid padrePidDomainPropertyId = new global::System.Guid(0x671162e2, 0xc6a3, 0x4e36, 0xa8, 0x0a, 0x03, 0x10, 0xb2, 0xc9, 0xe9, 0xa6);
		
		/// <summary>
		/// Storage for padrePid
		/// </summary>
		private global::System.String padrePidPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of padrePid domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.Padre Pid
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/padrePid.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/padrePid.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("671162e2-c6a3-4e36-a80a-0310b2c9e9a6")]
		public global::System.String padrePid
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return padrePidPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				padrePidPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.padrePid domain property.
		/// </summary>
		internal sealed partial class padrePidPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.String>
		{
			private padrePidPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.padrePid domain property value handler.
			/// </summary>
			public static readonly padrePidPropertyHandler Instance = new padrePidPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.padrePid domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return padrePidDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.padrePidPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.padrePidPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region modal domain property code
		
		/// <summary>
		/// modal domain property Id.
		/// </summary>
		public static readonly global::System.Guid modalDomainPropertyId = new global::System.Guid(0xd16b0840, 0x6240, 0x475b, 0xa3, 0xb1, 0x77, 0xe9, 0x9b, 0x6e, 0x49, 0xb6);
		
		/// <summary>
		/// Storage for modal
		/// </summary>
		private global::System.Boolean modalPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modal domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.Modal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/modal.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/modal.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d16b0840-6240-475b-a3b1-77e99b6e49b6")]
		public global::System.Boolean modal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modalPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modalPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.modal domain property.
		/// </summary>
		internal sealed partial class modalPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.Boolean>
		{
			private modalPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.modal domain property value handler.
			/// </summary>
			public static readonly modalPropertyHandler Instance = new modalPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.modal domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modalDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modalPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modalPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaPrincipal
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d7fec59c-0510-4c80-b6f4-16b264059561")]
	public partial class VentanaPrincipal : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd7fec59c, 0x0510, 0x4c80, 0xb6, 0xf4, 0x16, 0xb2, 0x64, 0x05, 0x95, 0x61);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Menu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Menu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d4c0b770-7358-4db8-a87f-3fd570611426")]
	public partial class Menu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Menu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd4c0b770, 0x7358, 0x4db8, 0xa8, 0x7f, 0x3f, 0xd5, 0x70, 0x61, 0x14, 0x26);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0xa740b183, 0x6f73, 0x4d0a, 0x8d, 0x64, 0xcf, 0x94, 0x3f, 0x1f, 0x20, 0x36);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Menu.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu/titulo.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu/titulo.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a740b183-6f73-4d0a-8d64-cf943f1f2036")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Menu.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<Menu, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Menu.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Menu.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Menu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Menu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.Menu
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.MenuDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ItemsMenu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemsMenu> ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.MenuDomainRoleId);
			}
		}
		#endregion
		#region Ventana opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.MenuDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass ItemsMenu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b6096013-5613-4d7b-896f-3bf270cc7e23")]
	public partial class ItemsMenu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemsMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb6096013, 0x5613, 0x4d7b, 0x89, 0x6f, 0x3b, 0xf2, 0x70, 0xcc, 0x7e, 0x23);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemsMenu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemsMenu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x6bd3db7e, 0x8ce3, 0x482a, 0x80, 0x37, 0x55, 0xda, 0x6a, 0xa0, 0x88, 0x77);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu/titulo.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu/titulo.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6bd3db7e-8ce3-482a-8037-55da6aa08877")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ItemsMenu.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<ItemsMenu, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ItemsMenu.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ItemsMenu.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ItemsMenu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ItemsMenu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EstadoDeFin opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoDeFin.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.ItemsMenu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoDeFin> EstadoDeFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoDeFin>, EstadoDeFin>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.ItemsMenuDomainRoleId);
			}
		}
		#endregion
		#region Ventana opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.ItemsMenu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.ItemsMenuDomainRoleId);
			}
		}
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.ItemsMenu
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.ItemsMenuDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.ItemsMenuDomainRoleId, value);
			}
		}
		#endregion
		#region Menu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.ItemsMenu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.ItemsMenuDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Boton
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d64e5205-1c13-4f1f-bcfc-c13723dc9baf")]
	public partial class Boton : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Boton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd64e5205, 0x1c13, 0x4f1f, 0xbc, 0xfc, 0xc1, 0x37, 0x23, 0xdc, 0x9b, 0xaf);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x8557b3ae, 0xb238, 0x4015, 0xae, 0x1f, 0x73, 0x9e, 0x58, 0x21, 0x53, 0xb3);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton/titulo.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton/titulo.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8557b3ae-b238-4015-ae1f-739e582153b3")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Boton.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<Boton, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Boton.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Boton.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Boton element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Boton element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EstadoDeFin opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoDeFin.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.Boton
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoDeFin> EstadoDeFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoDeFin>, EstadoDeFin>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.BotonDomainRoleId);
			}
		}
		#endregion
		#region Ventana1 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana1.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.Boton
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana1
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.BotonDomainRoleId);
			}
		}
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.Boton
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.BotonDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region Ventana opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.Boton
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.BotonDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass EstadoDeFin
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("bc8172ea-453e-49e2-a64e-625c3a5dabd1")]
	public partial class EstadoDeFin : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstadoDeFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xbc8172ea, 0x453e, 0x49e2, 0xa6, 0x4e, 0x62, 0x5c, 0x3a, 0x5d, 0xab, 0xd1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoDeFin(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoDeFin(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Boton opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Boton.
		/// Description for
		/// UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.EstadoDeFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.EstadoDeFinDomainRoleId);
			}
		}
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.EstadoDeFin
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.EstadoDeFinDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.EstadoDeFinDomainRoleId, value);
			}
		}
		#endregion
		#region ItemsMenu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// Description for
		/// UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.EstadoDeFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemsMenu> ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.EstadoDeFinDomainRoleId);
			}
		}
		#endregion
	}
}
