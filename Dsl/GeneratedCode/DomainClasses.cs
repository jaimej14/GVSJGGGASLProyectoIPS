//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Tapiz
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("5cd05756-bc53-4d1b-8140-a2e1ab38e55c")]
	public partial class Tapiz : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Tapiz domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5cd05756, 0xbc53, 0x4d1b, 0x81, 0x40, 0xa2, 0xe1, 0xab, 0x38, 0xe5, 0x5c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region VentanaPrincipal opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaPrincipal.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.Tapiz
		/// </summary>
		public virtual VentanaPrincipal VentanaPrincipal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.TapizDomainRoleId) as VentanaPrincipal;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.TapizDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaSecundarium opposite domain role accessor
		
		/// <summary>
		/// Gets a list of VentanaSecundarium.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<VentanaSecundaria> VentanaSecundarium
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<VentanaSecundaria>, VentanaSecundaria>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.TapizDomainRoleId);
			}
		}
		#endregion
		#region Botons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Botons.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Botons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.TapizDomainRoleId);
			}
		}
		#endregion
		#region Menus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menus.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.TapizDomainRoleId);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.TapizDomainRoleId);
			}
		}
		#endregion
		#region EstadoFinned opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoFinned.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoFin> EstadoFinned
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoFin>, EstadoFin>(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: TapizHasVentanaPrincipal.VentanaPrincipal
					if (this.VentanaPrincipal != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal sourceVentanaPrincipal1 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal;
			if (sourceVentanaPrincipal1 != null)
			{
				// Create link for path TapizHasVentanaPrincipal.VentanaPrincipal
				this.VentanaPrincipal = sourceVentanaPrincipal1;

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria sourceVentanaSecundaria2 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria;
			if (sourceVentanaSecundaria2 != null)
			{
				// Create link for path TapizHasVentanaSecundarium.VentanaSecundarium
				this.VentanaSecundarium.Add(sourceVentanaSecundaria2);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton sourceBoton3 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton;
			if (sourceBoton3 != null)
			{
				// Create link for path TapizHasBotons.Botons
				this.Botons.Add(sourceBoton3);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu sourceMenu4 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu;
			if (sourceMenu4 != null)
			{
				// Create link for path TapizHasMenus.Menus
				this.Menus.Add(sourceMenu4);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu sourceItemMenu5 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu;
			if (sourceItemMenu5 != null)
			{
				// Create link for path TapizHasItemMenus.ItemMenus
				this.ItemMenus.Add(sourceItemMenu5);

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin sourceEstadoFin6 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin;
			if (sourceEstadoFin6 != null)
			{
				// Create link for path TapizHasEstadoFinned.EstadoFinned
				this.EstadoFinned.Add(sourceEstadoFin6);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal sourceVentanaPrincipal1 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal;
			if (sourceVentanaPrincipal1 != null)
			{
				// Delete link for path TapizHasVentanaPrincipal.VentanaPrincipal
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceVentanaPrincipal1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.VentanaPrincipalDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria sourceVentanaSecundaria2 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria;
			if (sourceVentanaSecundaria2 != null)
			{
				// Delete link for path TapizHasVentanaSecundarium.VentanaSecundarium
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceVentanaSecundaria2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.VentanaSecundariaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton sourceBoton3 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton;
			if (sourceBoton3 != null)
			{
				// Delete link for path TapizHasBotons.Botons
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceBoton3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.BotonDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu sourceMenu4 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu;
			if (sourceMenu4 != null)
			{
				// Delete link for path TapizHasMenus.Menus
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceMenu4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.MenuDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu sourceItemMenu5 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu;
			if (sourceItemMenu5 != null)
			{
				// Delete link for path TapizHasItemMenus.ItemMenus
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceItemMenu5))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.ItemMenuDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin sourceEstadoFin6 = sourceElement as global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin;
			if (sourceEstadoFin6 != null)
			{
				// Delete link for path TapizHasEstadoFinned.EstadoFinned
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.GetLinks((global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz)this, sourceEstadoFin6))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Ventana
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("12b3e506-d3f7-4539-b5c3-265c7f4f8d2e")]
	public abstract partial class Ventana : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Ventana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x12b3e506, 0xd3f7, 0x4539, 0xb5, 0xc3, 0x26, 0x5c, 0x7f, 0x4f, 0x8d, 0x2e);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Ventana(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xe1bb9804, 0x3e96, 0x41b8, 0xbe, 0x91, 0x6b, 0xff, 0xb0, 0x91, 0xba, 0x48);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/nombre.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/nombre.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("e1bb9804-3e96-41b8-be91-6bffb091ba48")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ancho domain property code
		
		/// <summary>
		/// ancho domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoDomainPropertyId = new global::System.Guid(0x47a4d61a, 0xcb44, 0x4ba2, 0x99, 0x87, 0x5b, 0x3b, 0x50, 0x3c, 0x31, 0xc7);
		
		/// <summary>
		/// Storage for ancho
		/// </summary>
		private global::System.Int64 anchoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ancho domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Ancho
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/ancho.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/ancho.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("47a4d61a-cb44-4ba2-9987-5b3b503c31c7")]
		public global::System.Int64 ancho
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				anchoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.ancho domain property.
		/// </summary>
		internal sealed partial class anchoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int64>
		{
			private anchoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.ancho domain property value handler.
			/// </summary>
			public static readonly anchoPropertyHandler Instance = new anchoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.ancho domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int64 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.anchoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int64 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int64 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.anchoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region alto domain property code
		
		/// <summary>
		/// alto domain property Id.
		/// </summary>
		public static readonly global::System.Guid altoDomainPropertyId = new global::System.Guid(0xf92c1660, 0x32e1, 0x4032, 0x91, 0xf1, 0xe1, 0xcb, 0xd9, 0xe0, 0x17, 0x71);
		
		/// <summary>
		/// Storage for alto
		/// </summary>
		private global::System.Int64 altoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of alto domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Ventana.Alto
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/alto.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Ventana/alto.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f92c1660-32e1-4032-91f1-e1cbd9e01771")]
		public global::System.Int64 alto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return altoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				altoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.alto domain property.
		/// </summary>
		internal sealed partial class altoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int64>
		{
			private altoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.alto domain property value handler.
			/// </summary>
			public static readonly altoPropertyHandler Instance = new altoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.alto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return altoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int64 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.altoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int64 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int64 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.altoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TieneBotons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TieneBotons.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneBotons.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> TieneBotons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneBotons.VentanaDomainRoleId);
			}
		}
		#endregion
		#region TieneMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TieneMenus.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneMenus.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> TieneMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneMenus.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Botons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Botons.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Ventana.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Botons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Ventana.VentanaDomainRoleId);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_Ventana.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_Ventana.VentanaDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaPrincipal
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaPrincipal.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("bdb18c2b-5b73-4372-bd61-23a59a253720")]
	public partial class VentanaPrincipal : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xbdb18c2b, 0x5b73, 0x4372, 0xbd, 0x61, 0x23, 0xa5, 0x9a, 0x25, 0x37, 0x20);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for
		/// UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.VentanaPrincipal
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.VentanaPrincipalDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaPrincipal.VentanaPrincipalDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaSecundaria
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f8275e25-6edf-434a-999e-e17adf1720a1")]
	public partial class VentanaSecundaria : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf8275e25, 0x6edf, 0x434a, 0x99, 0x9e, 0xe1, 0x7a, 0xdf, 0x17, 0x20, 0xa1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region modal domain property code
		
		/// <summary>
		/// modal domain property Id.
		/// </summary>
		public static readonly global::System.Guid modalDomainPropertyId = new global::System.Guid(0xa5a694c7, 0x00e6, 0x44f0, 0x95, 0x02, 0x84, 0x29, 0x24, 0x8e, 0xa3, 0xd8);
		
		/// <summary>
		/// Storage for modal
		/// </summary>
		private global::System.Boolean modalPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modal domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.Modal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/modal.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/modal.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a5a694c7-00e6-44f0-9502-8429248ea3d8")]
		public global::System.Boolean modal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modalPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modalPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.modal domain property.
		/// </summary>
		internal sealed partial class modalPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.Boolean>
		{
			private modalPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.modal domain property value handler.
			/// </summary>
			public static readonly modalPropertyHandler Instance = new modalPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.modal domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modalDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modalPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modalPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region padre domain property code
		
		/// <summary>
		/// padre domain property Id.
		/// </summary>
		public static readonly global::System.Guid padreDomainPropertyId = new global::System.Guid(0x4dd326ff, 0x6793, 0x4d52, 0x89, 0x07, 0xd0, 0x32, 0x94, 0x26, 0x4f, 0x3e);
		
		/// <summary>
		/// Storage for padre
		/// </summary>
		private global::System.String padrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of padre domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria.Padre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/padre.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaSecundaria/padre.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4dd326ff-6793-4d52-8907-d03294264f3e")]
		public global::System.String padre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return padrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				padrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.padre domain property.
		/// </summary>
		internal sealed partial class padrePropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.String>
		{
			private padrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.padre domain property value handler.
			/// </summary>
			public static readonly padrePropertyHandler Instance = new padrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.padre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return padreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.padrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.padrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for
		/// UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.VentanaSecundaria
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.VentanaSecundariaDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentanaSecundarium.VentanaSecundariaDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Boton
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("31637824-1e87-4346-8719-c6cf09ec31b4")]
	public partial class Boton : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Boton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x31637824, 0x1e87, 0x4346, 0x87, 0x19, 0xc6, 0xcf, 0x09, 0xec, 0x31, 0xb4);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x85ffc0a7, 0x2d21, 0x4beb, 0xb1, 0x6a, 0x89, 0x28, 0x83, 0x3f, 0x57, 0x4b);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton/nombre.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Boton/nombre.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("85ffc0a7-2d21-4beb-b16a-8928833f574b")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Boton.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Boton, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Boton.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Boton.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Boton element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Boton element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.Boton
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.BotonDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBotons.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region InVentana opposite domain role accessor
		/// <summary>
		/// Gets or sets InVentana.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneBotons.Boton
		/// </summary>
		public virtual Ventana InVentana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneBotons.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneBotons.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFin.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Fin.Boton
		/// </summary>
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Fin.BotonDomainRoleId) as EstadoFin;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Fin.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaDestino opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaDestino.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Ventana.Boton
		/// </summary>
		public virtual Ventana VentanaDestino
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Ventana.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Ventana.BotonDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass Menu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Menu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("01cbf14d-c57e-483e-8812-0b69bdeb366c")]
	public partial class Menu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Menu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x01cbf14d, 0xc57e, 0x483e, 0x88, 0x12, 0x0b, 0x69, 0xbd, 0xeb, 0x36, 0x6c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x76503542, 0x6f45, 0x44b7, 0xa6, 0xa0, 0x69, 0x5f, 0x63, 0x0f, 0xa5, 0xb3);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Menu.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu/nombre.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.Menu/nombre.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("76503542-6f45-44b7-a6a0-695f630fa5b3")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Menu.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Menu, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Menu.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Menu.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Menu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Menu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.Menu
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.MenuDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenus.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region InVentana opposite domain role accessor
		/// <summary>
		/// Gets or sets InVentana.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneMenus.Menu
		/// </summary>
		public virtual Ventana InVentana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneMenus.MenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaTieneMenus.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuTieneItemsMenu.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuTieneItemsMenu.MenuDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass ItemMenu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (nombre = {nombrePropertyStorage})")]
	[DslModeling::DomainObjectId("ff411900-7498-4226-8f6e-1e4ee8e0aa87")]
	public partial class ItemMenu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xff411900, 0x7498, 0x4226, 0x8f, 0x6e, 0x1e, 0x4e, 0xe8, 0xe0, 0xaa, 0x87);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xbb6ef8e2, 0xc453, 0x434f, 0x9b, 0x12, 0xf8, 0xad, 0x1f, 0x50, 0x92, 0xd9);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu/nombre.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu/nombre.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("bb6ef8e2-c453-434f-9b12-f8ad1f5092d9")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ItemMenu.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<ItemMenu, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ItemMenu.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ItemMenu.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ItemMenu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ItemMenu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.ItemMenu
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.ItemMenuDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemMenus.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
		#region Menu opposite domain role accessor
		/// <summary>
		/// Gets or sets Menu.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuTieneItemsMenu.ItemMenu
		/// </summary>
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuTieneItemsMenu.ItemMenuDomainRoleId) as Menu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuTieneItemsMenu.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFin.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_EstadoFin.ItemMenu
		/// </summary>
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_EstadoFin.ItemMenuDomainRoleId) as EstadoFin;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_EstadoFin.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaDestino opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaDestino.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_Ventana.ItemMenu
		/// </summary>
		public virtual Ventana VentanaDestino
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_Ventana.ItemMenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_Ventana.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainClass EstadoFin
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.EstadoFin.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("625565ea-1896-4be4-8a49-7963cc34f3a4")]
	public partial class EstadoFin : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstadoFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x625565ea, 0x1896, 0x4be4, 0x8a, 0x49, 0x79, 0x63, 0xcc, 0x34, 0xf3, 0xa4);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.EstadoFin
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId, value);
			}
		}
		#endregion
		#region Botons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Botons.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Fin.EstadoFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Botons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton_Fin.EstadoFinDomainRoleId);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_EstadoFin.EstadoFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemMenu_EstadoFin.EstadoFinDomainRoleId);
			}
		}
		#endregion
	}
}
