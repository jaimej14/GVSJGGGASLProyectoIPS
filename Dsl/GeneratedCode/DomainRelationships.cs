//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasVentana
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("7942a86a-9cb4-43a1-990a-fe8bac094238")]
	public partial class TapizHasVentana : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasVentana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7942a86a, 0x9cb4, 0x43a1, 0x99, 0x0a, 0xfe, 0x8b, 0xac, 0x09, 0x42, 0x38);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasVentana link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public TapizHasVentana(Tapiz source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasVentana.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasVentana.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasVentana(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasVentana(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasVentana(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasVentana(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x4c7c5bfc, 0xac19, 0x4a89, 0x81, 0xcb, 0x33, 0x3e, 0xa2, 0xbe, 0x46, 0x72);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana/Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana/Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4c7c5bfc-ac19-4a89-81cb-333ea2be4672")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Ventana
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Ventana element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Ventana element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaDomainRoleId, newTapiz);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xbec83715, 0xcbb6, 0x469c, 0x9d, 0x12, 0x8c, 0x03, 0xb6, 0x2e, 0x25, 0xc5);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana/Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana/Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana/Ventana.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("bec83715-cbb6-469c-9d12-8c03b62e25c5")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Tapiz
		/// <summary>
		/// Gets a list of Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentana(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasVentana links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana> GetLinksToVentana ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana>(tapizInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.TapizDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the TapizHasVentana link to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana GetLinkToTapiz (global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana ventanaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana>(ventanaInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.VentanaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Ventana not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasVentana instance accessors
		
		/// <summary>
		/// Get any TapizHasVentana links between a given Tapiz and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasVentana link between a given Tapizand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasVentana link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship RelacionDeFinalizacionB
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("c961b6f8-2b37-4adf-8f78-4b4c41b6a98c")]
	public partial class RelacionDeFinalizacionB : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionDeFinalizacionB domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc961b6f8, 0x2b37, 0x4adf, 0x8f, 0x78, 0x4b, 0x4c, 0x41, 0xb6, 0xa9, 0x8c);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionDeFinalizacionB link in the same Partition as the given Boton
		/// </summary>
		/// <param name="source">Boton to use as the source of the relationship.</param>
		/// <param name="target">EstadoDeFin to use as the target of the relationship.</param>
		public RelacionDeFinalizacionB(Boton source, EstadoDeFin target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionDeFinalizacionB.BotonDomainRoleId, source), new DslModeling::RoleAssignment(RelacionDeFinalizacionB.EstadoDeFinDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeFinalizacionB(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeFinalizacionB(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeFinalizacionB(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeFinalizacionB(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x1525b98f, 0x4817, 0x40ad, 0x81, 0x34, 0xcb, 0xaf, 0x4a, 0x6c, 0x3a, 0x27);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB/Boton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB/Boton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoDeFin", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB/Boton.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("1525b98f-4817-40ad-8134-cbaf4a6c3a27")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Boton of a EstadoDeFin
		/// <summary>
		/// Gets a list of Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBoton(EstadoDeFin element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, EstadoDeFinDomainRoleId);
		}
		#endregion
		#region EstadoDeFin domain role code
		
		/// <summary>
		/// EstadoDeFin domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoDeFinDomainRoleId = new global::System.Guid(0x18c725d8, 0xa9a6, 0x4f5d, 0xa0, 0x85, 0x13, 0xe9, 0x2e, 0x25, 0x8d, 0x9b);
		
		/// <summary>
		/// DomainRole EstadoDeFin
		/// Description for
		/// UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.EstadoDeFin
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB/EstadoDeFin.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB/EstadoDeFin.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Boton", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB/EstadoDeFin.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("18c725d8-a9a6-4f5d-a085-13e92e258d9b")]
		public virtual EstadoDeFin EstadoDeFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoDeFin)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoDeFinDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoDeFinDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoDeFin of a Boton
		/// <summary>
		/// Gets a list of EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EstadoDeFin> GetEstadoDeFin(Boton element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoDeFin>, EstadoDeFin>(element, BotonDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the list of RelacionDeFinalizacionB links to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB> GetLinksToEstadoDeFin ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton botonInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB>(botonInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.BotonDomainRoleId);
		}
		#endregion
		#region EstadoDeFin link accessor
		/// <summary>
		/// Get the list of RelacionDeFinalizacionB links to a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB> GetLinksToBoton ( global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin estadoDeFinInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB>(estadoDeFinInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.EstadoDeFinDomainRoleId);
		}
		#endregion
		#region RelacionDeFinalizacionB instance accessors
		
		/// <summary>
		/// Get any RelacionDeFinalizacionB links between a given Boton and a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton source, global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.BotonDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB link in links )
			{
				if ( target.Equals(link.EstadoDeFin) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionDeFinalizacionB link between a given Botonand a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton source, global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB.BotonDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionB link in links )
			{
				if ( target.Equals(link.EstadoDeFin) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasEstadoDeFin
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("ab7f24eb-8b7b-4cc3-9179-415f28aed7b8")]
	public partial class TapizHasEstadoDeFin : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasEstadoDeFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xab7f24eb, 0x8b7b, 0x4cc3, 0x91, 0x79, 0x41, 0x5f, 0x28, 0xae, 0xd7, 0xb8);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasEstadoDeFin link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">EstadoDeFin to use as the target of the relationship.</param>
		public TapizHasEstadoDeFin(Tapiz source, EstadoDeFin target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasEstadoDeFin.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasEstadoDeFin.EstadoDeFinDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasEstadoDeFin(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasEstadoDeFin(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasEstadoDeFin(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasEstadoDeFin(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0xe0e1bfda, 0x4684, 0x49e8, 0x86, 0x46, 0xa4, 0x03, 0x7b, 0x6e, 0xa9, 0x09);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin/Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin/Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoDeFin", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e0e1bfda-4684-49e8-8646-a4037b6ea909")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a EstadoDeFin
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(EstadoDeFin element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EstadoDeFinDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(EstadoDeFin element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EstadoDeFinDomainRoleId, newTapiz);
		}
		#endregion
		#region EstadoDeFin domain role code
		
		/// <summary>
		/// EstadoDeFin domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoDeFinDomainRoleId = new global::System.Guid(0x5a1f9eaf, 0x1e6f, 0x44b4, 0x93, 0x0a, 0xe8, 0x57, 0xd7, 0xf1, 0x41, 0x9d);
		
		/// <summary>
		/// DomainRole EstadoDeFin
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.EstadoDeFin
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin/EstadoDeFin.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin/EstadoDeFin.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin/EstadoDeFin.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("5a1f9eaf-1e6f-44b4-930a-e857d7f1419d")]
		public virtual EstadoDeFin EstadoDeFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoDeFin)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoDeFinDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoDeFinDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoDeFin of a Tapiz
		/// <summary>
		/// Gets a list of EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EstadoDeFin> GetEstadoDeFin(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoDeFin>, EstadoDeFin>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasEstadoDeFin links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin> GetLinksToEstadoDeFin ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin>(tapizInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.TapizDomainRoleId);
		}
		#endregion
		#region EstadoDeFin link accessor
		/// <summary>
		/// Get the TapizHasEstadoDeFin link to a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin GetLinkToTapiz (global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin estadoDeFinInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin>(estadoDeFinInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.EstadoDeFinDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EstadoDeFin not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasEstadoDeFin instance accessors
		
		/// <summary>
		/// Get any TapizHasEstadoDeFin links between a given Tapiz and a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin link in links )
			{
				if ( target.Equals(link.EstadoDeFin) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasEstadoDeFin link between a given Tapizand a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasEstadoDeFin link in links )
			{
				if ( target.Equals(link.EstadoDeFin) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship RelacionDeFinalizacionM
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("0bfa9053-d8aa-4af2-901c-b1a7a2ff2ce1")]
	public partial class RelacionDeFinalizacionM : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionDeFinalizacionM domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0bfa9053, 0xd8aa, 0x4af2, 0x90, 0x1c, 0xb1, 0xa7, 0xa2, 0xff, 0x2c, 0xe1);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionDeFinalizacionM link in the same Partition as the given ItemsMenu
		/// </summary>
		/// <param name="source">ItemsMenu to use as the source of the relationship.</param>
		/// <param name="target">EstadoDeFin to use as the target of the relationship.</param>
		public RelacionDeFinalizacionM(ItemsMenu source, EstadoDeFin target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionDeFinalizacionM.ItemsMenuDomainRoleId, source), new DslModeling::RoleAssignment(RelacionDeFinalizacionM.EstadoDeFinDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeFinalizacionM(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeFinalizacionM(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeFinalizacionM(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeFinalizacionM(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ItemsMenu domain role code
		
		/// <summary>
		/// ItemsMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemsMenuDomainRoleId = new global::System.Guid(0xa6a58faa, 0xea4a, 0x4a16, 0xbb, 0x44, 0xa2, 0xa6, 0x12, 0x9d, 0xcc, 0x47);
		
		/// <summary>
		/// DomainRole ItemsMenu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.ItemsMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM/ItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM/ItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoDeFin", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM/ItemsMenu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a6a58faa-ea4a-4a16-bb44-a2a6129dcc47")]
		public virtual ItemsMenu ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemsMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemsMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemsMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemsMenu of a EstadoDeFin
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemsMenu> GetItemsMenu(EstadoDeFin element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(element, EstadoDeFinDomainRoleId);
		}
		#endregion
		#region EstadoDeFin domain role code
		
		/// <summary>
		/// EstadoDeFin domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoDeFinDomainRoleId = new global::System.Guid(0xf82d1094, 0x95bb, 0x4ff3, 0xa4, 0x27, 0x1e, 0x57, 0x37, 0x85, 0x39, 0x17);
		
		/// <summary>
		/// DomainRole EstadoDeFin
		/// Description for
		/// UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.EstadoDeFin
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM/EstadoDeFin.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM/EstadoDeFin.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ItemsMenu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM/EstadoDeFin.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("f82d1094-95bb-4ff3-a427-1e5737853917")]
		public virtual EstadoDeFin EstadoDeFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoDeFin)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoDeFinDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoDeFinDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoDeFin of a ItemsMenu
		/// <summary>
		/// Gets a list of EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EstadoDeFin> GetEstadoDeFin(ItemsMenu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoDeFin>, EstadoDeFin>(element, ItemsMenuDomainRoleId);
		}
		#endregion
		#region ItemsMenu link accessor
		/// <summary>
		/// Get the list of RelacionDeFinalizacionM links to a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM> GetLinksToEstadoDeFin ( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu itemsMenuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM>(itemsMenuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.ItemsMenuDomainRoleId);
		}
		#endregion
		#region EstadoDeFin link accessor
		/// <summary>
		/// Get the list of RelacionDeFinalizacionM links to a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM> GetLinksToItemsMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin estadoDeFinInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM>(estadoDeFinInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.EstadoDeFinDomainRoleId);
		}
		#endregion
		#region RelacionDeFinalizacionM instance accessors
		
		/// <summary>
		/// Get any RelacionDeFinalizacionM links between a given ItemsMenu and a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu source, global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.ItemsMenuDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM link in links )
			{
				if ( target.Equals(link.EstadoDeFin) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionDeFinalizacionM link between a given ItemsMenuand a EstadoDeFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu source, global::UPM_IPS.GVSJGGGASLProyectoIPS.EstadoDeFin target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM.ItemsMenuDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeFinalizacionM link in links )
			{
				if ( target.Equals(link.EstadoDeFin) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship RelacionDeAccionM
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("2f8935fa-3d7d-4faf-b0fd-89b67f9ccc1c")]
	public partial class RelacionDeAccionM : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionDeAccionM domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2f8935fa, 0x3d7d, 0x4faf, 0xb0, 0xfd, 0x89, 0xb6, 0x7f, 0x9c, 0xcc, 0x1c);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionDeAccionM link in the same Partition as the given ItemsMenu
		/// </summary>
		/// <param name="source">ItemsMenu to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public RelacionDeAccionM(ItemsMenu source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionDeAccionM.ItemsMenuDomainRoleId, source), new DslModeling::RoleAssignment(RelacionDeAccionM.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeAccionM(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeAccionM(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeAccionM(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeAccionM(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ItemsMenu domain role code
		
		/// <summary>
		/// ItemsMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemsMenuDomainRoleId = new global::System.Guid(0x1f13672e, 0x4c85, 0x40bb, 0x96, 0x32, 0x90, 0x63, 0xcc, 0x5c, 0x24, 0x2e);
		
		/// <summary>
		/// DomainRole ItemsMenu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.ItemsMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM/ItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM/ItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM/ItemsMenu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("1f13672e-4c85-40bb-9632-9063cc5c242e")]
		public virtual ItemsMenu ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemsMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemsMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemsMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemsMenu of a Ventana
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemsMenu> GetItemsMenu(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x186b5058, 0x71d2, 0x48b0, 0xb8, 0xc4, 0xc8, 0x58, 0x6c, 0xd6, 0xd7, 0xe6);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM/Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM/Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ItemsMenu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("186b5058-71d2-48b0-b8c4-c8586cd6d7e6")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a ItemsMenu
		/// <summary>
		/// Gets a list of Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentana(ItemsMenu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, ItemsMenuDomainRoleId);
		}
		#endregion
		#region ItemsMenu link accessor
		/// <summary>
		/// Get the list of RelacionDeAccionM links to a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM> GetLinksToVentana ( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu itemsMenuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM>(itemsMenuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.ItemsMenuDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of RelacionDeAccionM links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM> GetLinksToItemsMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM>(ventanaInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.VentanaDomainRoleId);
		}
		#endregion
		#region RelacionDeAccionM instance accessors
		
		/// <summary>
		/// Get any RelacionDeAccionM links between a given ItemsMenu and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.ItemsMenuDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionDeAccionM link between a given ItemsMenuand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM.ItemsMenuDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionM link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship RelacionDeAccionB
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("a72be47f-5950-4883-a846-511aed259568")]
	public partial class RelacionDeAccionB : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionDeAccionB domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa72be47f, 0x5950, 0x4883, 0xa8, 0x46, 0x51, 0x1a, 0xed, 0x25, 0x95, 0x68);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionDeAccionB link in the same Partition as the given Boton
		/// </summary>
		/// <param name="source">Boton to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public RelacionDeAccionB(Boton source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionDeAccionB.BotonDomainRoleId, source), new DslModeling::RoleAssignment(RelacionDeAccionB.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeAccionB(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeAccionB(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDeAccionB(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDeAccionB(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x2d144648, 0xf4f2, 0x4372, 0xa3, 0xf7, 0x4f, 0x74, 0x38, 0xaa, 0xe0, 0x3a);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB/Boton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB/Boton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventana1", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB/Boton.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("2d144648-f4f2-4372-a3f7-4f7438aae03a")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Boton1 of a Ventana
		/// <summary>
		/// Gets a list of Boton1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBoton1(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x4f5aa691, 0x35ed, 0x4bb3, 0xbb, 0x31, 0xc9, 0x3d, 0xdd, 0x26, 0xe4, 0x53);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB/Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB/Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Boton1", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4f5aa691-35ed-4bb3-bb31-c93ddd26e453")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana1 of a Boton
		/// <summary>
		/// Gets a list of Ventana1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentana1(Boton element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, BotonDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the list of RelacionDeAccionB links to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB> GetLinksToVentana1 ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton botonInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB>(botonInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.BotonDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of RelacionDeAccionB links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB> GetLinksToBoton1 ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB>(ventanaInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.VentanaDomainRoleId);
		}
		#endregion
		#region RelacionDeAccionB instance accessors
		
		/// <summary>
		/// Get any RelacionDeAccionB links between a given Boton and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.BotonDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionDeAccionB link between a given Botonand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB.BotonDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.RelacionDeAccionB link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasBoton
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("99b42fa4-7897-4b56-a3fa-303ed45c9b42")]
	public partial class TapizHasBoton : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasBoton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x99b42fa4, 0x7897, 0x4b56, 0xa3, 0xfa, 0x30, 0x3e, 0xd4, 0x5c, 0x9b, 0x42);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasBoton link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Boton to use as the target of the relationship.</param>
		public TapizHasBoton(Tapiz source, Boton target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasBoton.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasBoton.BotonDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasBoton(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasBoton(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasBoton(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasBoton(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0xc96c1c2d, 0xc23a, 0x4750, 0x9a, 0x20, 0xfc, 0x3d, 0x52, 0x3f, 0x35, 0x47);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton/Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton/Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Boton", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("c96c1c2d-c23a-4750-9a20-fc3d523f3547")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Boton
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Boton element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, BotonDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Boton element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, BotonDomainRoleId, newTapiz);
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x5ac25402, 0x5755, 0x43f9, 0x9e, 0x01, 0xc1, 0x77, 0x19, 0x6d, 0x77, 0x08);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton/Boton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton/Boton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton/Boton.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("5ac25402-5755-43f9-9e01-c177196d7708")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Boton of a Tapiz
		/// <summary>
		/// Gets a list of Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBoton(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasBoton links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton> GetLinksToBoton ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton>(tapizInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.TapizDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the TapizHasBoton link to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton GetLinkToTapiz (global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton botonInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton>(botonInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.BotonDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Boton not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasBoton instance accessors
		
		/// <summary>
		/// Get any TapizHasBoton links between a given Tapiz and a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasBoton link between a given Tapizand a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasBoton link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasMenu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("7a2b2b24-fbf8-42f4-9edf-f0c85c928f8b")]
	public partial class TapizHasMenu : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7a2b2b24, 0xfbf8, 0x42f4, 0x9e, 0xdf, 0xf0, 0xc8, 0x5c, 0x92, 0x8f, 0x8b);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasMenu link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public TapizHasMenu(Tapiz source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasMenu.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasMenu.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasMenu(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasMenu(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasMenu(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasMenu(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x727e54d4, 0x90eb, 0x4409, 0xa4, 0x33, 0xec, 0xe9, 0x1c, 0x61, 0xea, 0x09);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu/Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu/Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("727e54d4-90eb-4409-a433-ece91c61ea09")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Menu
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Menu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, MenuDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Menu element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, MenuDomainRoleId, newTapiz);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x1f58be15, 0x701b, 0x4ee9, 0x82, 0x97, 0xd0, 0xec, 0xc4, 0x7e, 0x7b, 0xb9);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu/Menu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu/Menu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu/Menu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("1f58be15-701b-4ee9-8297-d0ecc47e7bb9")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a Tapiz
		/// <summary>
		/// Gets a list of Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenu(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasMenu links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu> GetLinksToMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu>(tapizInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.TapizDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the TapizHasMenu link to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu GetLinkToTapiz (global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu menuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu>(menuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.MenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Menu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasMenu instance accessors
		
		/// <summary>
		/// Get any TapizHasMenu links between a given Tapiz and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasMenu link between a given Tapizand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasMenu link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasItemsMenu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("c450ecfb-c581-4104-b136-d534278871ce")]
	public partial class TapizHasItemsMenu : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasItemsMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc450ecfb, 0xc581, 0x4104, 0xb1, 0x36, 0xd5, 0x34, 0x27, 0x88, 0x71, 0xce);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasItemsMenu link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">ItemsMenu to use as the target of the relationship.</param>
		public TapizHasItemsMenu(Tapiz source, ItemsMenu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasItemsMenu.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasItemsMenu.ItemsMenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasItemsMenu(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasItemsMenu(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasItemsMenu(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasItemsMenu(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x25590b91, 0xc171, 0x4c70, 0x82, 0x52, 0x82, 0xd6, 0x89, 0x6a, 0x50, 0xee);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu/Tapiz.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu/Tapiz.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ItemsMenu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("25590b91-c171-4c70-8252-82d6896a50ee")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a ItemsMenu
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(ItemsMenu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemsMenuDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(ItemsMenu element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemsMenuDomainRoleId, newTapiz);
		}
		#endregion
		#region ItemsMenu domain role code
		
		/// <summary>
		/// ItemsMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemsMenuDomainRoleId = new global::System.Guid(0x928da260, 0x865a, 0x472f, 0xab, 0xa3, 0x01, 0x20, 0xf2, 0x87, 0xab, 0x22);
		
		/// <summary>
		/// DomainRole ItemsMenu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.ItemsMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu/ItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu/ItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu/ItemsMenu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("928da260-865a-472f-aba3-0120f287ab22")]
		public virtual ItemsMenu ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemsMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemsMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemsMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemsMenu of a Tapiz
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemsMenu> GetItemsMenu(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasItemsMenu links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu> GetLinksToItemsMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu>(tapizInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.TapizDomainRoleId);
		}
		#endregion
		#region ItemsMenu link accessor
		/// <summary>
		/// Get the TapizHasItemsMenu link to a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu GetLinkToTapiz (global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu itemsMenuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu>(itemsMenuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.ItemsMenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ItemsMenu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasItemsMenu instance accessors
		
		/// <summary>
		/// Get any TapizHasItemsMenu links between a given Tapiz and a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu link in links )
			{
				if ( target.Equals(link.ItemsMenu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasItemsMenu link between a given Tapizand a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Tapiz source, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu.TapizDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.TapizHasItemsMenu link in links )
			{
				if ( target.Equals(link.ItemsMenu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship MenuReferencesItemsMenu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("f3f248df-eede-4c8f-8aa3-9416178a722f")]
	public partial class MenuReferencesItemsMenu : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// MenuReferencesItemsMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf3f248df, 0xeede, 0x4c8f, 0x8a, 0xa3, 0x94, 0x16, 0x17, 0x8a, 0x72, 0x2f);
	
				
		/// <summary>
		/// Constructor
		/// Creates a MenuReferencesItemsMenu link in the same Partition as the given Menu
		/// </summary>
		/// <param name="source">Menu to use as the source of the relationship.</param>
		/// <param name="target">ItemsMenu to use as the target of the relationship.</param>
		public MenuReferencesItemsMenu(Menu source, ItemsMenu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(MenuReferencesItemsMenu.MenuDomainRoleId, source), new DslModeling::RoleAssignment(MenuReferencesItemsMenu.ItemsMenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MenuReferencesItemsMenu(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MenuReferencesItemsMenu(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MenuReferencesItemsMenu(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MenuReferencesItemsMenu(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x48f1f725, 0x4216, 0x4064, 0x95, 0x1b, 0xd7, 0x52, 0x98, 0x09, 0x92, 0x06);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu/Menu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu/Menu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ItemsMenu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("48f1f725-4216-4064-951b-d75298099206")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a ItemsMenu
		/// <summary>
		/// Gets a list of Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenu(ItemsMenu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, ItemsMenuDomainRoleId);
		}
		#endregion
		#region ItemsMenu domain role code
		
		/// <summary>
		/// ItemsMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemsMenuDomainRoleId = new global::System.Guid(0x8b2003a5, 0x338d, 0x4fd8, 0xb7, 0x76, 0x3b, 0x0e, 0x73, 0x43, 0xa4, 0xb0);
		
		/// <summary>
		/// DomainRole ItemsMenu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.ItemsMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu/ItemsMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu/ItemsMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu/ItemsMenu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("8b2003a5-338d-4fd8-b776-3b0e7343a4b0")]
		public virtual ItemsMenu ItemsMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemsMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemsMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemsMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemsMenu of a Menu
		/// <summary>
		/// Gets a list of ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemsMenu> GetItemsMenu(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemsMenu>, ItemsMenu>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of MenuReferencesItemsMenu links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu> GetLinksToItemsMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu>(menuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.MenuDomainRoleId);
		}
		#endregion
		#region ItemsMenu link accessor
		/// <summary>
		/// Get the list of MenuReferencesItemsMenu links to a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu> GetLinksToMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu itemsMenuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu>(itemsMenuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.ItemsMenuDomainRoleId);
		}
		#endregion
		#region MenuReferencesItemsMenu instance accessors
		
		/// <summary>
		/// Get any MenuReferencesItemsMenu links between a given Menu and a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu source, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.MenuDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu link in links )
			{
				if ( target.Equals(link.ItemsMenu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one MenuReferencesItemsMenu link between a given Menuand a ItemsMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu source, global::UPM_IPS.GVSJGGGASLProyectoIPS.ItemsMenu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu.MenuDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.MenuReferencesItemsMenu link in links )
			{
				if ( target.Equals(link.ItemsMenu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaReferencesBoton
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("75347d1d-7b53-414f-abaa-f443d7463c1b")]
	public partial class VentanaReferencesBoton : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaReferencesBoton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x75347d1d, 0x7b53, 0x414f, 0xab, 0xaa, 0xf4, 0x43, 0xd7, 0x46, 0x3c, 0x1b);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaReferencesBoton link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Boton to use as the target of the relationship.</param>
		public VentanaReferencesBoton(Ventana source, Boton target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaReferencesBoton.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaReferencesBoton.BotonDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaReferencesBoton(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaReferencesBoton(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaReferencesBoton(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaReferencesBoton(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x596dcd25, 0x796e, 0x4067, 0x8c, 0x9c, 0xcf, 0x40, 0xf9, 0x69, 0x09, 0x7f);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton/Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton/Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Boton", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("596dcd25-796e-4067-8c9c-cf40f969097f")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Boton
		/// <summary>
		/// Gets a list of Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentana(Boton element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, BotonDomainRoleId);
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x2f062d0b, 0x065a, 0x45ed, 0x91, 0x76, 0xef, 0xdc, 0xe2, 0x66, 0x42, 0x61);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton/Boton.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton/Boton.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton/Boton.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("2f062d0b-065a-45ed-9176-efdce2664261")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Boton of a Ventana
		/// <summary>
		/// Gets a list of Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBoton(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaReferencesBoton links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton> GetLinksToBoton ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton>(ventanaInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.VentanaDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the list of VentanaReferencesBoton links to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton> GetLinksToVentana ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton botonInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton>(botonInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.BotonDomainRoleId);
		}
		#endregion
		#region VentanaReferencesBoton instance accessors
		
		/// <summary>
		/// Get any VentanaReferencesBoton links between a given Ventana and a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaReferencesBoton link between a given Ventanaand a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesBoton link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.GVSJGGGASLProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaReferencesMenu
	/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("85f8cf5a-6c13-4ebc-9144-6f047ab800ed")]
	public partial class VentanaReferencesMenu : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaReferencesMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x85f8cf5a, 0x6c13, 0x4ebc, 0x91, 0x44, 0x6f, 0x04, 0x7a, 0xb8, 0x00, 0xed);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaReferencesMenu link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public VentanaReferencesMenu(Ventana source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaReferencesMenu.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaReferencesMenu.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaReferencesMenu(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaReferencesMenu(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaReferencesMenu(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaReferencesMenu(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xb0527098, 0xe200, 0x472a, 0xbb, 0xbc, 0x1b, 0x04, 0x1f, 0xc3, 0xce, 0x0c);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu/Ventana.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu/Ventana.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("b0527098-e200-472a-bbbc-1b041fc3ce0c")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Menu
		/// <summary>
		/// Gets a list of Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentana(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x324e0bcb, 0x2722, 0x43fa, 0xbd, 0xcc, 0xd2, 0x17, 0xf3, 0xb8, 0x98, 0x79);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu/Menu.DisplayName", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu/Menu.Description", typeof(global::UPM_IPS.GVSJGGGASLProyectoIPS.GVSJGGGASLProyectoIPSDomainModel), "UPM_IPS.GVSJGGGASLProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("324e0bcb-2722-43fa-bdcc-d217f3b89879")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a Ventana
		/// <summary>
		/// Gets a list of Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenu(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaReferencesMenu links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu> GetLinksToMenu ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu>(ventanaInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.VentanaDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of VentanaReferencesMenu links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu> GetLinksToVentana ( global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu>(menuInstance, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.MenuDomainRoleId);
		}
		#endregion
		#region VentanaReferencesMenu instance accessors
		
		/// <summary>
		/// Get any VentanaReferencesMenu links between a given Ventana and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu> GetLinks( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu>();
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaReferencesMenu link between a given Ventanaand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu GetLink( global::UPM_IPS.GVSJGGGASLProyectoIPS.Ventana source, global::UPM_IPS.GVSJGGGASLProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu>(source, global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.GVSJGGGASLProyectoIPS.VentanaReferencesMenu link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
